/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.CustomerRole;

import EcoSystem.AccountValidator.Validator;
import EcoSystem.Enterprise.Enterprise;
import EcoSystem.Network.Network;
import EcoSystem.Employee.Employee.SkillType;
import EcoSystem.Enterprise.Billing_ShipmentEnterprise;
import EcoSystem.Organization.BillingOrganization;
import EcoSystem.Organization.CustomerOrganization;
import EcoSystem.Organization.Organization;
import EcoSystem.Organization.ServiceOrganization;
import EcoSystem.Service.Service;
import EcoSystem.Service.ServiceList;
import EcoSystem.UserAccount.UserAccount;
import EcoSystem.WorkQueue.ServiceBillingWorkRequest;
import EcoSystem.WorkQueue.ServicePlaceWorkRequest;
import java.awt.CardLayout;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Lucy Bai
 */
public class OrderService extends javax.swing.JPanel {

    /**
     * Creates new form RequestPlumbing
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    private Network network;
    private Enterprise enterprise;
    private SkillType skillType;
    private Service service;
    private ServiceList serviceList;
    private CustomerOrganization customerOrganization;
    OrderService(JPanel userProcessContainer, UserAccount account, Network network, Enterprise enterprise, String type, CustomerOrganization customerOrganization) {
        initComponents();
        this.account=account;
        this.network = network;
        this.enterprise=enterprise;
        service=new Service();
        this.userProcessContainer=userProcessContainer;
        this.skillType = getType(type);
        lblNetwork.setText(network.toString());  
        this.customerOrganization = customerOrganization;
        serviceList = customerOrganization.getServiceList();
    }
    
    public SkillType getType(String type) {
        
        SkillType sk = null;
        for(SkillType skillType: SkillType.values()) {
            if(skillType.getValue().equals(type)) {
                sk = skillType;
            }
        }
        return sk;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        btnBack = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblNetwork = new javax.swing.JLabel();
        loginPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtProblem = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        cmbHour = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cmbTime = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        btnReqService = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        btnBack.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(646, Short.MAX_VALUE)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(474, 474, 474))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(0, 19, Short.MAX_VALUE)
                .addComponent(btnBack))
        );

        add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(-1, 0, 1230, 50));

        jPanel5.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setText("Order Service");

        jLabel9.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel9.setText("Network:");

        lblNetwork.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblNetwork.setText("<network>");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(402, 402, 402)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(77, 77, 77)
                        .addComponent(lblNetwork)))
                .addContainerGap(602, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(lblNetwork))
                .addContainerGap(65, Short.MAX_VALUE))
        );

        add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 47, 1230, 220));

        loginPanel.setBackground(new java.awt.Color(32, 47, 90));

        txtProblem.setColumns(20);
        txtProblem.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        txtProblem.setRows(5);
        jScrollPane1.setViewportView(txtProblem);

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Describe the problem:");

        cmbHour.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        cmbHour.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        jLabel3.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Hour:");

        jLabel7.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Date:");

        txtDate.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("*(MM-DD-YYYY)");

        cmbTime.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        cmbTime.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "7:00 AM", "7:30 AM", "8:00 AM", "8:30 AM", "9:00 AM", "9:30 AM", "10:00 AM", "10:30 AM", "11:00 AM", "11:30 AM", "12:00 PM", "12:30 PM", "1:00 PM", "1:30 PM", "2:00 PM", "2:30 PM", "3:00 PM", "3:30 PM", "4:00 PM", "4:30 PM", "5:00 PM", "5:30 PM", "6:00 PM", "6:30 PM", "7:00 PM", "7:30 PM", "8:00 PM", "8:30 PM", "9:00 PM" }));

        jLabel4.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("At what Time:");

        jLabel5.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Address:");

        txtAddress.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        btnReqService.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        btnReqService.setText("Request Service");
        btnReqService.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReqServiceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout loginPanelLayout = new javax.swing.GroupLayout(loginPanel);
        loginPanel.setLayout(loginPanelLayout);
        loginPanelLayout.setHorizontalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addGap(258, 258, 258)
                        .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(loginPanelLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(38, 38, 38)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(loginPanelLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(162, 162, 162)
                                .addComponent(cmbHour, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(loginPanelLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(164, 164, 164)
                                .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(loginPanelLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(99, 99, 99)
                                .addComponent(cmbTime, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(loginPanelLayout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(139, 139, 139)
                                .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addGap(403, 403, 403)
                        .addComponent(btnReqService)))
                .addContainerGap(457, Short.MAX_VALUE))
        );
        loginPanelLayout.setVerticalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel3))
                    .addComponent(cmbHour, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel7))
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel8)))
                .addGap(8, 8, 8)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel4))
                    .addComponent(cmbTime, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel5))
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnReqService, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(183, Short.MAX_VALUE))
        );

        add(loginPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 260, 1230, 540));
    }// </editor-fold>//GEN-END:initComponents

    private void btnReqServiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReqServiceActionPerformed
  // TODO add your handling code here:
//    && Validator.isValidDate(txtDate.getText()
        if(!txtProblem.getText().trim().isEmpty() && !txtAddress.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(null, enterprise.getOrganizationDirectory().getOrganizationList().size());
                Organization org = null;
                for(Enterprise e: network.getEnterpriseDirectory().getEnterpriseList()) {
                if(e instanceof Billing_ShipmentEnterprise) {
                    for(Organization organiz: e.getOrganizationDirectory().getOrganizationList()) {
                        if( organiz instanceof BillingOrganization) {
                            org = organiz;
                            break;
                        }
                    }
                }
            }
   
                for(Organization o: enterprise.getOrganizationDirectory().getOrganizationList()) {
                     if(o instanceof ServiceOrganization) {
                            ServicePlaceWorkRequest sp=new ServicePlaceWorkRequest();
                            service.setHours(Integer.parseInt(cmbHour.getSelectedItem().toString()));
                            service.setAddress(txtAddress.getText());
                            service.setProblem(txtProblem.getText());
                            service.setUserAccount(account);
                            SimpleDateFormat s = new SimpleDateFormat("MM-dd-yyyy");
                            SimpleDateFormat s1 = new SimpleDateFormat("hh:mm a");
                            try {
                                    service.setServiceDate(s.parse(txtDate.getText()));
                                    service.setServiceTime(s1.parse((String) cmbTime.getSelectedItem()));                             
                                } catch (ParseException ex) {
                                    Logger.getLogger(OrderService.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            service.setServiceType(skillType);                            
                            sp.setSender(account);
                            sp.setService(service);
                            sp.setStatus("Processing");
                            o.getWorkQueue().getWorkRequestList().add(sp);
                            System.out.print(o.getWorkQueue().getWorkRequestList().size());
                            try{
                                if(service!=null){                                    
                                serviceList.addService(service);
                            }
                            }catch(Exception ex){
                                JOptionPane.showMessageDialog(null, "Error");
                            }
                            Date date =new Date();
                            service.setDate(date);
                            ServiceBillingWorkRequest sb = new ServiceBillingWorkRequest();
                            sb.setService(service);
                            sb.setSender(account);
                            sb.setRequestDate(date);
                            sb.setStatus("Processing");                            
                         if(org!=null){
                             account.getWorkQueue().getWorkRequestList().add(sb);
                             org.getWorkQueue().getWorkRequestList().add(sb);
                         }                         
                     }
                }
        
            // Work Request Left      
           JOptionPane.showMessageDialog(null, "We have received your request!\n Assigning somebody shortly.", "Request for Service Received", JOptionPane.INFORMATION_MESSAGE);
           txtAddress.setText("");
           txtDate.setText("");
           txtDate.setText("");
            
            
        }
        else if(txtProblem.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "You forgot to mention the problem!", "Empty Field", JOptionPane.ERROR_MESSAGE);
        }
        else if(txtAddress.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "You forgot to mention the Address!", "Empty Field", JOptionPane.ERROR_MESSAGE);
        }
//        else if(!Validator.isValidDate(txtDate.getText())) {
//            JOptionPane.showMessageDialog(null, "Something is not right with Date", "Check Date", JOptionPane.ERROR_MESSAGE);
//        }
        
    }//GEN-LAST:event_btnReqServiceActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnReqService;
    private javax.swing.JComboBox cmbHour;
    private javax.swing.JComboBox cmbTime;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblNetwork;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextArea txtProblem;
    // End of variables declaration//GEN-END:variables
}
